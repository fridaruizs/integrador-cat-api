name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v3

      - name: set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: restore dependencies
        run: dotnet restore

      - name: build
        run: dotnet build --configuration Release --no-restore

      - name: run tests
        run: dotnet test --configuration Release --no-build

  docker-publish:
    needs: build-test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: check out code
        uses: actions/checkout@v3

      - name: login to docker hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: build and push image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/integrador-cat-api:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/integrador-cat-api:${{ github.sha }}

  deploy:
    needs: docker-publish
    runs-on: ubuntu-latest
    steps:
      - name: deploy to production
        env:
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
        run: |
          export DD_SERVICE="integrador-cat-api"
          export DD_ENV="production"
          export DD_VERSION="${{ github.sha }}"
          export DD_TRACE_ENABLED=true

          # SSH into server and pull image 
          echo "Deploying to production server"
          # ssh user@your-server "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/integrador-cat-api:${{ github.sha }} && docker run -d --rm -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/integrador-cat-api:${{ github.sha }}"
